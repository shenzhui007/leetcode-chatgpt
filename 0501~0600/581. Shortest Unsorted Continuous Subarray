class Solution:
    def findUnsortedSubarray(self, nums: List[int]) -> int:
        n = len(nums)
        if n <= 1:
            return 0
        
        # Find the left and right boundaries of the unsorted subarray
        l, r = 0, n-1
        while l < n-1 and nums[l] <= nums[l+1]:
            l += 1
        while r > 0 and nums[r] >= nums[r-1]:
            r -= 1
        
        if l > r:
            return 0
        
        # Find the minimum and maximum values in the unsorted subarray
        min_val = float('inf')
        max_val = float('-inf')
        for i in range(l, r+1):
            min_val = min(min_val, nums[i])
            max_val = max(max_val, nums[i])
        
        # Expand the unsorted subarray to include any elements that need to be sorted
        while l > 0 and nums[l-1] > min_val:
            l -= 1
        while r < n-1 and nums[r+1] < max_val:
            r += 1
        
        return r-l+1
