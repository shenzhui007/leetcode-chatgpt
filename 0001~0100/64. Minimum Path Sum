class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        # Initialize a 2D array to store the minimum path sum to each cell
        path_sums = [[0] * len(grid[0]) for _ in range(len(grid))]

        # Fill in the first row and first column of the array
        path_sums[0][0] = grid[0][0]
        for i in range(1, len(grid)):
            path_sums[i][0] = path_sums[i-1][0] + grid[i][0]
        for j in range(1, len(grid[0])):
            path_sums[0][j] = path_sums[0][j-1] + grid[0][j]

        # Calculate the minimum path sum for the rest of the cells
        for i in range(1, len(grid)):
            for j in range(1, len(grid[0])):
                path_sums[i][j] = min(path_sums[i-1][j], path_sums[i][j-1]) + grid[i][j]

        return path_sums[-1][-1]
