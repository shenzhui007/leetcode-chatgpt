class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        return self._count_reverse_pairs(nums, 0, len(nums) - 1)

    def _count_reverse_pairs(self, nums: List[int], left: int, right: int) -> int:
        if left >= right:
            return 0
        
        mid = (left + right) // 2
        count = self._count_reverse_pairs(nums, left, mid) + self._count_reverse_pairs(nums, mid+1, right)
        
        i, j = left, mid+1
        while i <= mid and j <= right:
            if nums[i] <= 2 * nums[j]:
                i += 1
            else:
                count += mid - i + 1
                j += 1
        
        nums[left:right+1] = sorted(nums[left:right+1])
        
        return count
