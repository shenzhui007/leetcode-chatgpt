class Solution:
    def findSubsequences(self, nums: List[int]) -> List[List[int]]:
        res = []
        self.dfs(nums, [], res)
        return res
    
    def dfs(self, nums, path, res):
        if len(path) > 1:
            res.append(path)
        seen = set()
        for i in range(len(nums)):
            if nums[i] in seen:
                continue
            seen.add(nums[i])
            if not path or nums[i] >= path[-1]:
                self.dfs(nums[i+1:], path+[nums[i]], res)
