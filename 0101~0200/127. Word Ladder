class Solution:
    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:
        wordSet = set(wordList)
        if endWord not in wordSet:
            return 0
        queue = deque([beginWord])
        visited = set([beginWord])
        distance = 1

        while queue:
            size = len(queue)
            for i in range(size):
                word = queue.popleft()
                if word == endWord:
                    return distance
                for j in range(len(word)):
                    for k in range(26):
                        newWord = word[:j] + chr(ord('a') + k) + word[j+1:]
                        if newWord in wordSet and newWord not in visited:
                            queue.append(newWord)
                            visited.add(newWord)
            distance += 1
        
        return 0
