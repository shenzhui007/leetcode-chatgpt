# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        if not headA or not headB:
            return None

        currA, currB = headA, headB
        tailA, tailB = None, None

        while currA != currB:
            if currA.next:
                currA = currA.next
            elif tailA is None:
                tailA = currA
                currA = headB
            else:
                return None

            if currB.next:
                currB = currB.next
            elif tailB is None:
                tailB = currB
                currB = headA
            else:
                return None

        return currA
