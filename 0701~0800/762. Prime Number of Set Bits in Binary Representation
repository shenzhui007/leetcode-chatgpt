class Solution:
    def countPrimeSetBits(self, left: int, right: int) -> int:
        def is_prime(n):
            if n <= 1:
                return False
            if n == 2:
                return True
            if n % 2 == 0:
                return False
            
            for i in range(3, int(n ** 0.5) + 1, 2):
                if n % i == 0:
                    return False
            
            return True
        
        def count_set_bits(n):
            count = 0
            while n:
                n &= n - 1
                count += 1
            return count
        
        prime_count = 0
        for num in range(left, right + 1):
            bit_count = count_set_bits(num)
            if is_prime(bit_count):
                prime_count += 1
        
        return prime_count
