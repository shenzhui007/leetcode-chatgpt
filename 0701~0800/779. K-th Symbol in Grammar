class Solution:
    def kthGrammar(self, n: int, k: int) -> int:
        # Base case
        if n == 1:
            return 0
        
        # Recursively calculate the kth symbol in the nth row
        # If k is in the first half of the row, it's the same as kth symbol in the previous row
        # If k is in the second half of the row, it's the opposite of kth symbol in the previous row
        mid = 2**(n-1) // 2
        if k <= mid:
            return self.kthGrammar(n-1, k)
        else:
            return 1 - self.kthGrammar(n-1, k - mid)
