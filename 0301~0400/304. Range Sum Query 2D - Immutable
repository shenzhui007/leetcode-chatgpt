class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        if not matrix:
            return
        
        self.rows = len(matrix)
        self.cols = len(matrix[0])
        self.dp = [[0] * (self.cols+1) for _ in range(self.rows+1)]
        
        for r in range(self.rows):
            for c in range(self.cols):
                self.dp[r+1][c+1] = self.dp[r+1][c] + self.dp[r][c+1] + matrix[r][c] - self.dp[r][c]
    
    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:
        return self.dp[row2+1][col2+1] - self.dp[row2+1][col1] - self.dp[row1][col2+1] + self.dp[row1][col1]
        


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)
