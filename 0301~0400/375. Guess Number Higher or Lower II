class Solution:
    def getMoneyAmount(self, n: int) -> int:
        # Create a 2D table to store the minimum cost of guessing any number between i and j.
        dp = [[0] * (n + 2) for _ in range(n + 2)]
        
        # Loop through all possible lengths of the range (i, j).
        for l in range(2, n + 1):
            for i in range(1, n - l + 2):
                j = i + l - 1
                # Initialize the minimum cost to the maximum possible value.
                dp[i][j] = float('inf')
                # Loop through all possible guesses k within the range (i, j).
                for k in range(i, j + 1):
                    # Calculate the cost of guessing k and add it to the cost of guessing in the subranges (i, k-1) and (k+1, j).
                    cost = k + max(dp[i][k-1], dp[k+1][j])
                    # Update the minimum cost if the current cost is lower.
                    dp[i][j] = min(dp[i][j], cost)
        
        # The minimum cost of guessing any number between 1 and n is stored in dp[1][n].
        return dp[1][n]
