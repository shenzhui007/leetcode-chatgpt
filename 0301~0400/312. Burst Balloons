class Solution:
    def maxCoins(self, nums: List[int]) -> int:
        n = len(nums)
        # Add padding to nums to handle edge cases
        nums = [1] + nums + [1]
        # dp[i][j] stores the maximum coins that can be collected
        # by bursting all balloons between i and j (inclusive)
        dp = [[0] * (n + 2) for _ in range(n + 2)]
        for k in range(1, n + 1):
            # Iterate over all possible subarrays of length k
            for i in range(1, n - k + 2):
                j = i + k - 1
                # Burst balloon at position m last
                for m in range(i, j + 1):
                    dp[i][j] = max(dp[i][j],
                                   dp[i][m - 1] + dp[m + 1][j] + nums[i - 1] * nums[m] * nums[j + 1])
        return dp[1][n]
