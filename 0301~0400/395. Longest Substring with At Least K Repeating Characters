class Solution:
    def longestSubstring(self, s: str, k: int) -> int:
        max_length = 0
        for num_unique_chars in range(1, len(set(s))+1):
            left = 0
            char_count = {}
            num_chars_at_least_k = 0
            for right in range(len(s)):
                if s[right] not in char_count:
                    char_count[s[right]] = 0
                char_count[s[right]] += 1
                if char_count[s[right]] == k:
                    num_chars_at_least_k += 1

                while len(char_count) > num_unique_chars:
                    char_count[s[left]] -= 1
                    if char_count[s[left]] == k-1:
                        num_chars_at_least_k -= 1
                    if char_count[s[left]] == 0:
                        del char_count[s[left]]
                    left += 1

                if num_chars_at_least_k == num_unique_chars:
                    max_length = max(max_length, right - left + 1)

        return max_length
