# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def generateTrees(self, n: int) -> List[Optional[TreeNode]]:
        def generate_trees(start: int, end: int) -> List[Optional[TreeNode]]:
            if start > end:
                return [None]

            all_trees = []
            for i in range(start, end + 1):
                # Generate all left subtrees
                left_trees = generate_trees(start, i - 1)

                # Generate all right subtrees
                right_trees = generate_trees(i + 1, end)

                # Combine the left and right subtrees to generate all possible trees
                for left_tree in left_trees:
                    for right_tree in right_trees:
                        current_tree = TreeNode(i)
                        current_tree.left = left_tree
                        current_tree.right = right_tree
                        all_trees.append(current_tree)

            return all_trees

        return generate_trees(1, n) if n else []
